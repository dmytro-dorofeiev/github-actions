# on:
#   push
    # Sequence of patterns matched against refs/tags
    # tags:
    #   - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

on:
  # push:
  #   paths:
  #       - 'version.txt'
  workflow_dispatch:
    inputs:
      promote_version:
        description: 'Docker image hash tag to promote'
        required: true
        default: ''
      release_version:
        description: 'Release version of artifact'
        required: true
        default: ''

name: Create Release

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 10

    # - name: Get release version
    #   id: version
    #   run: echo ::set-output name=version::$(cat version.txt)

    - name: Print release version
      run: echo "Release Version is ${{ github.event.inputs.release_version }}"
      # run: echo "Release Version is ${{ steps.version.outputs.version }}"

    - name: Check if this tag exsists
      run: |
        if [[ $(git ls-remote --exit-code --tags origin ${{ github.event.inputs.release_version }}) ]]; then
            echo "This tag already exsists"
            exit 1
        else
            echo "This tag wasn't not found"
            exit 0
        fi

    - name: Re-Tag Docker Image
      run: echo "New docker image"

    - name: Create Release Tag
      run: |
        git config --global user.email "ci@example.com"
        git config --global user.name "Github CI"
        git tag ${{ github.event.inputs.release_version }}
        git push --tags

    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@latest
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: Release ${{ github.ref }}
    #     body: |
    #       Changes in this Release
    #       - First Change
    #       - Second Change
    #     draft: false
    #     prerelease: false

    - uses: notlmn/release-with-changelog@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        exclude: '^Meta'
        commit-template: '- {title} ← {hash}'
        template: |
          ### Changelog

          {commits}

          {range}

          ❤
